AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  CloudFormation script for spawning a new code enclave.
Parameters:
  KeyName:
    Description: 'Name of an existing EC2 KeyPair to enable SSH access to the instance'
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: 'must be the name of an existing EC2 KeyPair.'
  InstanceType:
    Description: 'Code enclave EC2 instance type'
    Type: 'String'
    Default: 't4g.nano'
    AllowedValues:
      - 't3.nano'
      - 't3.micro'
      - 't3.small'
      - 't3.medium'
      - 't4g.nano'
      - 't4g.micro'
      - 't4g.small'
      - 't4g.medium'
    ConstraintDescription: 'must be a valid EC2 instance type.'
  SSHLocation:
    Description: 'The IP address range that can be used to SSH to the EC2 instances'
    Type: 'String'
    MinLength: 9
    MaxLength: 18
    Default: '0.0.0.0/0'
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: 'must be a valid IP CIDR range of the form x.x.x.x/x.'
  RepositoryName:
    Description: 'Name of CodeCommit repository'
    Type: 'String'
    ConstraintDescription: 'must be a valid CodeCommit repository name.'
  RepositoryUrl:
    Description: 'URL of CodeCommit repository'
    Type: 'String'
    ConstraintDescription: 'must be a valid CodeCommit repository URL.'
  RepositoryArn:
    Description: 'ARN of CodeCommit repository'
    Type: 'String'
    ConstraintDescription: 'must be a valid CodeCommit repository ARN.'
  GitUsername:
    Description: 'Git username'
    Type: 'String'
    ConstraintDescription: 'will be used by Git and referenced in commits.'
  GitEmail:
    Description: 'Git email'
    Type: 'String'
    ConstraintDescription: 'will be used by Git and referenced in commits.'
Mappings:
  AWSInstanceType2Arch:
    t3.nano:
      Arch: 'x86'
    t3.micro:
      Arch: 'x86'
    t3.small:
      Arch: 'x86'
    t3.medium:
      Arch: 'x86'
    t4g.nano:
      Arch: 'Arm'
    t4g.micro:
      Arch: 'Arm'
    t4g.small:
      Arch: 'Arm'
    t4g.medium:
      Arch: 'Arm'
  AWSRegionArch2AMI:
    eu-north-1:
      x86: 'ami-0a3a4169ad7cb0d77'
      Arm: 'ami-054142e266e4dce8b'
    ap-south-1:
      x86: 'ami-0a4a70bd98c6d6441'
      Arm: 'ami-00e24e2d9b2d70f5c'
    eu-west-3:
      x86: 'ami-0d3f551818b21ed81'
      Arm: 'ami-07fc9de8736ed1be8'
    eu-west-2:
      x86: 'ami-0ff4c8fb495a5a50d'
      Arm: 'ami-0bbd1b7c1501b5858'
    eu-west-1:
      x86: 'ami-0aef57767f5404a3c'
      Arm: 'ami-08eae9b2b97caf274'
    ap-northeast-2:
      x86: 'ami-007b7745d0725de95'
      Arm: 'ami-009a9032e2f978f4d'
    ap-northeast-1:
      x86: 'ami-0f2dd5fc989207c82'
      Arm: 'ami-0d1f7bec0e294ef80'
    sa-east-1:
      x86: 'ami-0c3c87b7d583d618f'
      Arm: 'ami-084bdd6832fd0d959'
    ca-central-1:
      x86: 'ami-02e44367276fe7adc'
      Arm: 'ami-0e58c8909f4074123'
    ap-southeast-1:
      x86: 'ami-0c20b8b385217763f'
      Arm: 'ami-091a0ccfa19d86d92'
    ap-southeast-2:
      x86: 'ami-07fbdcfe29326c4fb'
      Arm: 'ami-07bad9b1fb33241de'
    eu-central-1:
      x86: 'ami-0502e817a62226e03'
      Arm: 'ami-0489277f0e9a94f8d'
    us-east-1:
      x86: 'ami-0885b1f6bd170450c'
      Arm: 'ami-054e49cb26c2fd312'
    us-east-2:
      x86: 'ami-0a91cd140a1fc148a'
      Arm: 'ami-0742a572c2ce45ebf'
    us-west-1:
      x86: 'ami-00831fc7c1e3ddc60'
      Arm: 'ami-017b2c64d333ddbf6'
    us-west-2:
      x86: 'ami-07dd19a7900a1f049'
      Arm: 'ami-03c1b544a7566b3e5'
Resources:
  CodeCommitRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'ec2.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: '/'
      Policies:
        - PolicyName:
            !Sub 'ReadWriteCodeCommitPolicyFor${RepositoryName}'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'codecommit:CreateBranch'
                  - 'codecommit:TagResource'
                  - 'codecommit:ListPullRequests'
                  - 'codecommit:PutFile'
                  - 'codecommit:GetPullRequestApprovalStates'
                  - 'codecommit:CreateCommit'
                  - 'codecommit:ListTagsForResource'
                  - 'codecommit:BatchDescribeMergeConflicts'
                  - 'codecommit:GetCommentsForComparedCommit'
                  - 'codecommit:GetCommentReactions'
                  - 'codecommit:GetComment'
                  - 'codecommit:MergePullRequestByThreeWay'
                  - 'codecommit:CreatePullRequest'
                  - 'codecommit:GetPullRequestOverrideState'
                  - 'codecommit:GetRepositoryTriggers'
                  - 'codecommit:UpdatePullRequestDescription'
                  - 'codecommit:UntagResource'
                  - 'codecommit:GetObjectIdentifier'
                  - 'codecommit:BatchGetPullRequests'
                  - 'codecommit:GetFile'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:MergePullRequestBySquash'
                  - 'codecommit:GetDifferences'
                  - 'codecommit:GetRepository'
                  - 'codecommit:GetMergeConflicts'
                  - 'codecommit:GetMergeCommit'
                  - 'codecommit:GitPush'
                  - 'codecommit:GetMergeOptions'
                  - 'codecommit:GetTree'
                  - 'codecommit:GetReferences'
                  - 'codecommit:GetBlob'
                  - 'codecommit:DescribeMergeConflicts'
                  - 'codecommit:UpdatePullRequestTitle'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetCommitHistory'
                  - 'codecommit:GetCommitsFromMergeBase'
                  - 'codecommit:BatchGetCommits'
                  - 'codecommit:DescribePullRequestEvents'
                  - 'codecommit:UpdatePullRequestStatus'
                  - 'codecommit:GetPullRequest'
                  - 'codecommit:UploadArchive'
                  - 'codecommit:ListAssociatedApprovalRuleTemplatesForRepository'
                  - 'codecommit:MergeBranchesBySquash'
                  - 'codecommit:ListBranches'
                  - 'codecommit:GitPull'
                  - 'codecommit:BatchGetRepositories'
                  - 'codecommit:GetCommentsForPullRequest'
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetFolder'
                  - 'codecommit:MergeBranchesByFastForward'
                  - 'codecommit:CreateUnreferencedMergeCommit'
                  - 'codecommit:EvaluatePullRequestApprovalRules'
                  - 'codecommit:MergeBranchesByThreeWay'
                  - 'codecommit:GetBranch'
                  - 'codecommit:MergePullRequestByFastForward'
                  - 'codecommit:DeleteFile'
                  - 'codecommit:DeleteBranch'
                Resource: !Ref 'RepositoryArn'
  CodeCommitInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref 'CodeCommitRole'
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Enable SSH access via port 22'
      SecurityGroupIngress:
        - IpProtocol: 'tcp'
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref 'SSHLocation'
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref 'InstanceType'
      SecurityGroups:
        - !Ref 'InstanceSecurityGroup'
      KeyName: !Ref 'KeyName'
      ImageId: !FindInMap 
        - 'AWSRegionArch2AMI'
        - !Ref 'AWS::Region'
        - !FindInMap
          - 'AWSInstanceType2Arch'
          - !Ref 'InstanceType'
          - 'Arch'
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          apt update
          apt install -y awscli
          git config --system credential.helper '!aws codecommit credential-helper $@'
          git config --system credential.UseHttpPath true
          git config --system user.name '${GitUsername}'
          git config --system user.email '${GitEmail}'
          su -l ubuntu -c 'cd /home/ubuntu && git clone "${RepositoryUrl}"'
      IamInstanceProfile:
        !Ref 'CodeCommitInstanceProfile'
Outputs:
  InstanceId:
    Description: 'InstanceId of the code enclave EC2 instance'
    Value: !Ref 'EC2Instance'
  AvailabilityZone:
    Description: 'Availability Zone of the code enclave EC2 instance'
    Value: !GetAtt 
      - 'EC2Instance'
      - 'AvailabilityZone'
  PublicDNS:
    Description: 'Public DNS address of the code enclave EC2 instance'
    Value: !GetAtt 
      - 'EC2Instance'
      - 'PublicDnsName'
  PublicIP:
    Description: 'Public IP address of the code enclave EC2 instance'
    Value: !GetAtt 
      - 'EC2Instance'
      - 'PublicIp'